<h2>Moses file type</h2>

<!-- Short description -->
<p>
The "Moses" file type represents a corpus with one sentence per line, each
sentence containing space-separated words, each word containing 4 pipe-separated 
factors (pipe is the vertical bar "|" character). The factors are surface form, lemma,
part of speech and syntax information.
</p>



<h3>Characteristics</h3>

<table border="1">
<tr><td><strong>String name<sup><a href="#fn1" id="ref1">1</a></sup></strong></td><td>"Moses"</td></tr>
<tr><td><strong>Categories</strong></td><td>"corpus" (input/output)</td></tr>
<tr><td><strong>Encoding</strong></td><td>Text file, UTF-8</td></tr>
<tr><td><strong>Source</strong></td><td>Factored corpus format for <a href="http://www.statmt.org/moses/?n=Moses.FactoredTutorial">Moses SMT toolkit</a></td></tr>
<tr><td><strong>Automatic detection</strong></td><td>Yes (by counting "|" and space characters)</td></tr>
</table>



<h3>Details</h3>

The "Moses" file type is a text file of category "corpus",
encoded in UTF-8. Each line should contain a list of space-separated words, and
each word should be the concatenation of 4 factors using the pipe character "|"
as separator:

<ul>
  <li>Factor  1: "SURFACE": Surface form of the word.</li>
  <li>Factor  2: "LEMMA": Lemmatized form of the word.</li>
  <li>Factor  3: "POS": Coarse-grained Part-Of-Speech tag.</li>
  <li>Factor  4: "SYN": The dependency relation REL, followed by a colon, followed by the index of the syntactic HEAD of the current token.</li>
</ul>

<p>
Each word is implicitly numbered according to its position, starting at 1. The HEAD information in SYNtactic factor uses this number to indicate the position of the head. REL names should not contain colons. An absent factor is left empty.
</p>

<!--<p>You can read the <a href="http://ilk.uvt.nl/conll/#dataformat">official CONLL-X definition</a>.</p>-->


<h3>Escape table</h3>

<p>Substrings involving special characters must be escaped as determined by this table:</p>

<p/>
<table border="1">
 <thead>
    <tr>
      <th>Unescaped</th>
      <th>Escaped</th>
      <th>Reason for escaping</th>
    </tr>
  </thead>
  <tbody>


    <tr>
      <td>"$"</td>
      <td>"${dollar}"</td>
      <td>This is the escaping character itself.</td>
    </tr>

    <tr>
      <td>"|"</td>
      <td>"${pipe}"</td>
      <td>Used as factor separator.</td>
    </tr>

    <tr>
      <td>" "</td>
      <td>"${space}"</td>
      <td>Used as word separator.</td>
    </tr>

    <tr>
      <td>"\t"</td>
      <td>"${tab}"</td>
      <td>Alternative word separator.</td>
    </tr>

    <tr>
      <td>"\n"</td>
      <td>"${newline}"</td>
      <td>Used as sentence separator.</td>
    </tr>

    <tr>
      <td>"#"</td>
      <td>"${hash}"</td>
      <td>Used by the toolkit as a comment prefix.</td>
    </tr>

   </tbody>
  </thead>
</table>

<p>Any output generated by the <code>mwetoolkit</code> will have these characters escaped as well.</p>



<h3>Code comments</h3>

<p>You can add a comment by prefixing any line with the special character "#".</p>




<h3>Example</h3>

<p>You can have a look at a sample <a
href="http://sourceforge.net/p/mwetoolkit/code/HEAD/tree/test/filetype-samples/corpus.moses">corpus</a>
file.</p>

<hr/>



<sup id="fn1">1. Case-sensitive string to be used with the <tt>filetype</tt>
directive and with script options such as <tt>--from</tt> and <tt>--to</tt>.<a href="#ref1" title="Jump back to footnote 1 in the text.">â†©</a></sup>
